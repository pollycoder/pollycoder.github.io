[ { "title": "OCP with Path Constraint", "url": "/posts/ocp/", "categories": "TechNotes, ORIC", "tags": "OCP", "date": "2024-07-08 10:30:00 +0800", "snippet": "Pontryagin’s Maximum PrinciplePontryagin’s Maximum Principle (PMP) is one of the most important parts in OCP solving. Based on variational method, PMP allows us to solve OCPs whose objective functional stagnation point cannot fall in admissible set, which makes PMP more widely used in OCPs with constraints, especially control constraints.The dynamic eqautions is given:\\[\\dot{\\mathbf{x}}=\\mathbf{f}(\\mathbf{x},\\mathbf{u},t)\\]Objective function\\[J(\\mathbf{x},\\mathbf{u},t)=\\varphi(\\mathbf{x}(t_f),t_f)+\\int_{t_0}^{t_f}L(\\mathbf{x},\\mathbf{u},t)dt\\]We have Hamilton function:\\[H(\\mathbf{x},\\mathbf{u},t)=L(\\mathbf{x},\\mathbf{u},t)+\\mathbf{\\lambda}^\\intercal \\mathbf{f}(\\mathbf{x},\\mathbf{u},t)\\]Therefore, if there’s no control constraint, we can simply let our objective function take the stationary value, therefore we have control equation:\\[\\frac{\\partial H}{\\partial \\mathbf{u}}=\\mathbf{0}\\\\\\]Costate equation:\\[\\dot{\\mathbf{\\lambda}}=-\\frac{\\partial H}{\\partial \\mathbf{x}}\\]All the equations come from variational method. For terminal conditions, you can also work them out using variational method.However, if there is control constraint (e.g. the amplitude of thrust):\\[C(\\mathbf{u},t)\\leq 0\\]We have\\[H=L+\\mathbf{\\lambda}^\\intercal \\mathbf{f}\\]In case that the stationary point cannot be taken in the admissible control set $U$, we modified the control equation into the one below:\\[\\mathbf{u^*}=\\arg \\min_{u\\in U}H(\\mathbf{u})\\]This is PMP. However, in Bryson’s Applied Optimal Control, this is solved with variational method instead of PMP. For terminal conditions in different situations, there are a lot of summary tables on technology websties like CSDN or StackOverFlow.Path Constraint and SolutionsEquality Constraint\\[\\begin{align}&amp;amp;S(\\mathbf{x},\\mathbf{u},t)=0\\\\&amp;amp;S(\\mathbf{x},t)=0\\end{align}\\]For state-and-control-mixed constraint $S(\\mathbf{x},\\mathbf{u},t)=0$, we have Hamilton function:\\[H=L+\\mathbf{\\lambda}^\\intercal \\mathbf{f}+\\mu S\\]For pure-state constraint $S(\\mathbf{x},t)=0$, we have to take the time derivative of $S$, until $S$ includes $\\mathbf{u}$ explicitly:\\[S^{(q)}_{\\mathbf{u}}(\\mathbf{x},\\mathbf{u},t)\\neq0, S^{(q)}(\\mathbf{x},\\mathbf{u},t)=0\\]Boundary conditions:\\[\\begin{bmatrix}S^{(0)}(\\mathbf{x}(t_0),t_0)\\\\S^{(1)}(\\mathbf{x}(t_0),t_0)\\\\\\cdots\\\\S^{(q-1)}(\\mathbf{x}(t_0),t_0)\\end{bmatrix}=\\mathbf{0}\\]If there’s no control constraint, we have\\[\\frac{\\partial H}{\\partial \\mathbf{u}}=\\mathbf{0}\\\\\\dot{\\mathbf{\\lambda}}=-\\frac{\\partial H}{\\partial \\mathbf{x}}\\]Therefore we get $u$ including the multiplier $\\mu$, substitute $\\mathbf{u}$ into $S^{(q)}$ and then we can get the expression of $\\mu$, and finally get the expression of $\\mathbf{u}$.Inequality Constraint\\[\\begin{align}&amp;amp;S(\\mathbf{x},\\mathbf{u},t)\\leq0\\\\&amp;amp;S(\\mathbf{x},t)\\leq0\\end{align}\\]For state-and-control-mixed constraint $S(\\mathbf{x},\\mathbf{u},t)\\leq0$, the Hamilton function is given by the last section, but we have:\\[\\mu=\\left\\{\\begin{array}&amp;gt;\\geq0,&amp;amp; S=0\\\\=0,&amp;amp; S&amp;lt;0\\end{array}\\right.\\]Get boundary control $\\mathbf{u}_b$ first, if $\\mathbf{u}$ is continuous, we have $\\mu(t_k^+)=\\mu(t_k^-)=0$.For pure-state constraint $S(\\mathbf{x},t)\\leq0$, we have two ways: Use $S^{(q)}$: Hamilton function is given by the last section.\\[\\mu=\\left\\{\\begin{array}&amp;gt;\\geq0,&amp;amp; S=0\\\\=0,&amp;amp; S&amp;lt;0\\end{array}\\right.\\]Tangency condition (interior condition):\\[N=\\begin{bmatrix}S^{(0)}(\\mathbf{x}(t_k),t_k)\\\\S^{(1)}(\\mathbf{x}(t_k),t_k)\\\\\\cdots\\\\S^{(q-1)}(\\mathbf{x}(t_k),t_k)\\end{bmatrix}=\\mathbf{0}\\]\\[\\left\\{\\begin{array}\\mathbf{\\lambda}^\\intercal (t_k^-)=\\mathbf{\\lambda}^\\intercal (t_k^+)+\\mathbf{\\pi}^\\intercal \\frac{\\partial N}{\\partial \\mathbf{x}(t_k)}\\\\H(t_k^-)=H (t_k^+)+\\mathbf{\\pi}^\\intercal \\frac{\\partial N}{\\partial t_k}\\\\\\end{array}\\right.\\] Use $S$:\\[\\mathcal{H}=L+\\mathbf{\\lambda}^\\intercal \\mathbf{f}+\\eta S\\]Solve boundary control first, then solve the multiplier $\\eta$. The tangency condition still exists, but the Hamilton function $H$ should be changed into $\\mathcal{H}$.Example: Van der Pol’s OscillatorThe example comes from Maurer’s Lecture - Part 3. The model is shown below:Here we take $a=-0.3$, and we solved the OCP in two ways.Source code: Van der Pol OscillatorResult PMP: Objective $J=7.8728$. GPOPS-II: Objective $J=7.8736$." }, { "title": "Tutorial for GPOPS-II", "url": "/posts/GPOPS-II/", "categories": "TechNotes, ORIC", "tags": "OCP", "date": "2024-07-04 10:30:00 +0800", "snippet": "The Very BeginningGPOPS-II is a MATLAB software based on Gauss pseudo-spectral method, mainly used on solving optimal control problems (OCP). This blog is a summary of the documentation of GPOPS-II, including the structure of the program and frequently-used parameters, mainly based on my own projects completed with GPOPS-II. Thanks for kunpeng’s blog and the user’s guide from GPOPS-II official website !There’s something you should know in advance: GPOPS-II divide the whole time interval into multiple time points. The state and control corresponding to each time point are a row vector, forming the matrix for calculation arranging in rows. Here’s the symbol list: Symbol Meaning $p$ Order of phase $N^{(p)}$ Length of time sequence for each phase $M$ Number of guessing points $g$ Number of eventgroups $n_b$ Dimension of each eventgroup $n_y$ Dimension of state vector for each phase $n_u$ Dimension of control vector for each phase $n_s$ Number of static parameters for each phase $n_c$ Number of path constraints for each phase $n_d$ Dimension of integrands for each phase For numerical examples, please go to user’s guide for help.Program Structure of GPOPS-IIA complete GPOPS-II solving program is shown below:%-------------------------------------------------------------%% ------------------- Variables defination -------------------%%-------------------------------------------------------------%% Bounds strucure assignment% Insert your code ...% Guess structure assignment% Insert your code ...% Auxdata structure assignment% Insert your code ...%-------------------------------------------------------------%% -------------------------- Setup ---------------------------%%-------------------------------------------------------------%% Namesetup.name = &quot;OCP-Name&quot;;% Functionssetup.functions.continuous = @OCPContinuous;setup.functions.endpoint = @OCPEndpoint;% Bounds, Guess, auxdatasetup.bounds = bounds;setup.guess = guess;setup.auxdata = auxdata;% Other setup parameters% Insert your code ...%-------------------------------------------------------------%% -------------------------- Solve ---------------------------%%-------------------------------------------------------------%output = gpops2(setup);%-------------------------------------------------------------%% -------------------- Continuous Function -------------------%%-------------------------------------------------------------%function output = OCPContinuous(input)% Defination% ...end%-------------------------------------------------------------%% --------------------- Endpoint Function --------------------%%-------------------------------------------------------------%function output = OCPEndpoint(input)% Defination% ...endContinuous function: Dynamics equationsfunction output = OCPContinuous(input)Components of input: input.phase(p).time: time vector for $p^{th}$ phase, $size=N^{(p)}\\times 1$ input.phase(p).state: state matrix for $p^{th}$ phase, $size=N^{(p)}\\times n_y^{(p)}$ input.phase(p).control: control matrix for $p^{th}$ phase, $size=N^{(p)}\\times n_u^{(p)}$ input.parameter: static parameter for $p^{th}$ phase, $size=N^{(p)}\\times n_s$ input.auxdataComponents of output: output(p).dynamics: dynamic equations for $p^{th}$ phase, $size=N^{(p)}\\times n_y^{(p)}$ output(p).path: path constraint for $p^{th}$ phase, $size=N^{(p)}\\times n_c^{(p)}$ output(p).integrand: integrand for $p^{th}$ phase, $size=N^{(p)}\\times n_d^{(p)}$Endpoint function:function output = OCPEndpoint(input)Components of input: input.phase(p).initialtime: initial time for $p^{th}$ phase input.phase(p).finaltime: final time for $p^{th}$ phase input.phase(p).initialstate: initial state for $p^{th}$ phase, $size=1\\times n_y^{(p)}$ input.phase(p).finalstate: final state for $p^{th}$ phase, $size=1\\times n_y^{(p)}$ input.phase(p).integral: integral for $p^{th}$ phase, $size=1\\times n_d^{(p)}$ input.parameter: static parameter for $p^{th}$ phase, $size=1\\times n_s$ input.auxdataComponents of output: output.objective: Objective function output.eventgroup(g): event constraints, $size=1\\times n_b^{(g)}$ Setupsetup is a structure composed of multiple structures. Therefore, for necessary components, we strongly recommend that you define the substructures in advance and use them to assign values to the components of setup.Necessary:% Namesetup.name = &quot;OCP-Name&quot;;% Functionssetup.functions.continuous = @OCPContinuous;setup.functions.endpoint = @OCPEndpoint;% Bounds, Guess, auxdatasetup.bounds = bounds;setup.guess = guess;setup.auxdata = auxdata;Bounds:Each variable declared should have its lower bound and upper bound defined, or GPOPS-II could not recognize the boundary for sprinkling.Be sure that the boundary not be too strict, or GPOPS-II cannot give a correct solution (SNOPT INFO -31) or you may encounter numerical difficulties (SNOPT INFO -41). Time Bounds:bounds.phase(p).initialtime.lower = t0_lower;bounds.phase(p).initialtime.upper = t0_upper;bounds.phase(p).finaltime.lower = tf_lower;bounds.phase(p).finaltime.upper = tf_upper;bounds.phase(p).durations.lower = dt_lower;bounds.phase(p).durations.upper = dt_upper; State Bounds: $size=1\\times n_y^{(p)}$bounds.phase(p).initialstate.lower = state0_lower;bounds.phase(p).initialstate.upper = state0_upper;bounds.phase(p).finalstate.lower = statef_lower;bounds.phase(p).finalstate.upper = statef_upper;bounds.phase(p).state.lower = state_lower;bounds.phase(p).state.upper = state_upper; Control Bounds: $size=1\\times n_u^{(p)}$bounds.phase(p).control.lower = u_lower;bounds.phase(p).control.upper = u_upper; Path Constraint Bounds: $size=1\\times n_c^{(p)}$bounds.phase(p).path.lower = path_lower;bounds.phase(p).path.upper = path_upper; Integral Bounds: $size=1\\times n_d^{(p)}$bounds.phase(p).integral.lower = int_lower;bounds.phase(p).integral.upper = int_upper; Parameter Bounds (if defined): $size=1\\times n_s $bounds.parameter.lower = para_lower;bounds.parameter.upper = para_upper; Eventgroup Bounds (if defined): $size=1\\times n_b$bounds.eventgroup(g).lower = event_lower;bounds.eventgroup(g).upper = event_upper;Guess:Each variable declared should have its guessing value, or GPOPS-II could not iterate based on the guess (except for eventgroup and path). Attention:For state and control, each row of guess should correspond to the time points you provide:\\(X_{guess-i}=X_{guess}(t_i)\\) Time Guess: $size=M^{(p)}\\times1$guess.phase(p).time = t_guess; State Guess: $size=M^{(p)}\\times n_y^{(p)}$guess.phase(p).state = state_guess; Control Guess: $size=M^{(p)}\\times n_u^{(p)}$guess.phase(p).control = control_guess; Integral Guess: $size=1\\times n_d$guess.integral = integral_guess; Parameter Guess: $size=1\\times n_s$guess.parameter = parameter_guess;Auxdataauxdata includes all the constants you are going to use during the solution, making it easier for users to import the constants in continuous function and endpoint function without repeatedly defining the same constant.Optional:Here we just list some frequently-used parameters.Derivatives and Cofig: Field Possible Values Default setup.derivatives.supplier ‘sparseBD’, ‘sparseCD’, ‘sparseFD’ ‘sparseFD’ setup.derivatives.derivativelevel ‘first’, ‘second’ ‘first’ setup.derivatives.dependencies ‘full’, ‘sparse’, ‘sparseNaN’ ‘sparseNaN’ setup.method ‘RPM-Differentiation’, ‘RPM-Integration’ ’RPM-Differentiation’ Scales: Field Possible Values Default setup.scales.method ‘none’, ‘auto-bounds’, ‘auto-guess’ ‘none’ Mesh: Field Possible Values Default setup.mesh.method ‘hp-PattersonRao’, ‘hp-DarbyRao’, ’hp-LiuRao’, ’hp-LiuRao-Legendre’ ‘hp-PattersonRao’ setup.mesh.tolerance $[0, 1]$ $10^{-3}$ setup.mesh.maxiterations Integer $\\geq 0$ $10$ setup.mesh.colpointsmin Interger $\\geq 2$ 3 setup.mesh.colpointsmax Integer $\\geq$ colpoints 10 setup.mesh.phase(p).fraction Length $M\\geq 1$ of Positive Numbers $&amp;gt;0$ and $&amp;lt;1$ that Sum to Unity 0.1*ones(1,10) setup.mesh.phase(p).colpoints Length $M \\geq 1$ of Positive Integers $&amp;gt; 1$ and $&amp;lt; 10$ 4*ones(1,10) NLP: Field Possible Values Default setup.nlp.solver ‘snopt’, ‘ipopt’ ‘ipopt’ setup.nlp.ipoptoptions.linear solver ‘mumps’ or ‘ma57’ ‘mumps’ setup.nlp.ipoptoptions.tolerance $&amp;gt;0$ $10^{-7}$ setup.nlp.ipoptoptions.maxiterations Integer $&amp;gt;0$ 2000 setup.nlp.snoptoptions.tolerance $&amp;gt;0$ $10^{-6}$ setup.nlp.snoptoptions.maxiterations Integer $&amp;gt;0$ 2000 OutputThe most important component of structure output is output.result, which includes: output.result.objective: value of your objective output.result.solution: optimal solution, includes: output.result.solution.phase(p).time: time sequence output.result.solution.phase(p).state: state matrix, consists of row vectors output.result.solution.phase(p).costate: approximated costate values for checking your results output.result.solution.phase(p).control: optimal control, cosists of row vectors Possible ErrorsUsually, we use SNOPT instead of IPOPT if we can get one, because the performance of SNOPT is better (but IPOPT is free). Normally, you should get the message below if GPOPS-II solves your problem correctly:SNOPTA EXIT 0 -- finished successfullySNOPTA INFO 1 -- optimality conditions satisfiedBut you may receive different messages if the problem were not solved successfully. For detailed information, you may go to the userguide of SNOPT. Here we just list error messages easiest to meet during your programming.Infeasible SolutionIf you get this message, it means that the solution inexists because the conditions you provided for problem solving are impossible to satisfy:SNOPTA EXIT -- 10 The problem appears to be infeasibleSNOPTA INFO -- 11 infeasible linear constraintsSNOPTA INFO -- 12 infeasible linear equalitiesYou should check the conditions you provided and fix them.Resource Limit ErrorIf you get this message, it means that the solution exists but it cannot converge to the correct result within iterations:SNOPTA EXIT -- 30 Resource limit errorSNOPTA INFO -- 31 iteration limit reachedSNOPTA INFO -- 32 major iteration limit reachedYou should try to increase the time of iterations.Numeraical DifficultiesIf you get this message, it means that SNOPT cannot improve the result during iterations:SNOPTA EXIT -- 40 Terminated after numerical difficultiesSNOPTA INFO -- 41 current point cannot be improvedSNOPTA INFO -- 42 singular basisSNOPTA INFO -- 43 cannot satisfy the general constraintsSNOPTA INFO -- 44 ill-conditioned null-space basisFirstly, you should check the dynamic equations you defined, because mostly the error is caused by the wrong dynamic equations. Then you should try to reduce the numerical illness of the problem." }, { "title": "Hash (Python)", "url": "/posts/hash/", "categories": "TechNotes, Advanced Python", "tags": "DSA", "date": "2022-10-11 18:52:30 +0800", "snippet": "Original ProblemCreate a dataset. Achieve three functions: Insert: put one element into the dataset. Delete: delete all the corresponding elements from the dataset. Search: check the dataset to search for certain element. If it exists, return 1; if not, return 0. The real purpose of this problem is asking you to create a hash table. If not, the time complexibility will become $O(n^2)$. You will receive “Time limitation exceeded”. If you use hash table, the time complexity will become $O(n)$.My SolutionSource code is listed below:#!/usr/bin/env python3&#39;&#39;&#39;Hash tableWritten by Polly ZhouCollege: Tsinghua University, Tsien Excellence in Education Program (TEEP)E-mail: pollyjoe2003@gmail.comSolution: Create a hash table to reduce time complexibilitySpecial acknowledgement for Qiyang Sun: At first I didn&#39;t want to spend much time to learn hash, but she encouraged me to use hash. Without her insistance, I would have given up solving this problem.Reminder: This is a simplified version of hash table. Hash function is quite simple, and I didn&#39;t put collision resolution here.&#39;&#39;&#39;# Hash tableclass HashTable: def __init__(self) -&amp;gt; None: self.size = 50000 self.slots = [] for w in range(0, self.size): self.slots.append([]) def put(self, data): hash_value = hashfunction(data, self.size) self.slots[hash_value].append(data) def search(self, element): search_key = hashfunction(element, self.size) if_have = False for k in self.slots[search_key]: if k == element: if_have = True if if_have: print(1) else: print(0) def delete(self, element): del_key = hashfunction(element, self.size) temp = self.slots[del_key][:] for u in self.slots[del_key]: if u == element: temp.remove(u) self.slots[del_key] = temp# Hash function, here we use modulo arithmeticdef hashfunction(data, size): return data % sizeif __name__ == &#39;__main__&#39;: table = HashTable() try: times = int(input()) for i in range(0, times): op, el = input().split() op = int(op) el = int(el) if op == 1: table.put(el) elif op == 2: table.delete(el) elif op == 3: table.search(el) else: continue except: exit(0) My idea: In a hash table, there is a list of slots for putting in new data, and a list of keys. For example, in Python, dictionary is a special hash table (1$\\to$1 type). It seems like classifying your inputs into different drawers, and if you need to pick them up, you need to search the corresponding drawer only according to the keys you’ve got. Therefore, the time cost is reduced by one dimension." }, { "title": "Draw A UML Class Diagram", "url": "/posts/uml/", "categories": "TechNotes, Advanced Programming", "tags": "uml", "date": "2022-10-07 23:12:30 +0800", "snippet": "Original Problem: The Shenzhou VI spacecraft is one of the Shenzhou spacecraft series, consisting of orbital module, re-entry capsule and escape tower. The re-entry capsule is where astronauts can drive the spacecraft, while the orbital module is where they work and have a rest. In case of emergency, astronauts can go to the escape tower for safety. The spacecraft is flanked by wings of solar cells that provide electricity.Based on the description above, draw a UML class diagram.My solutionclassDiagram%% Class listclass Shenzhouclass ShenzhouVIclass OrbitalModuleclass ReEntryCapsuleclass EscapeTowerclass Astronautclass SolarCellWing%% CompositionShenzhouVI*--OrbitalModuleShenzhouVI*--ReEntryCapsuleShenzhouVI*--EscapeTower%% DependencyAstronaut..&amp;gt;OrbitalModuleAstronaut..&amp;gt;ReEntryCapsuleAstronaut..&amp;gt;EscapeTowerShenzhouVI..&amp;gt;SolarCellWing%% InheritanceShenzhou&amp;lt;|--ShenzhouVI" }, { "title": "Full Permutation with Recursion", "url": "/posts/permutation/", "categories": "TechNotes, Advanced Python", "tags": "algorithm", "date": "2022-10-05 08:12:30 +0800", "snippet": "Origianl ProblemGive you a number $n$, print the full permutation of the number list $(1\\to n)$.My SolutionHere we use recursion. My source code is listed below:#!/usr/bin/env python3&quot;&quot;&quot; Permutation with recursion Written by Polly Zhou, Tsinghua University E-mail: pollyjoe2003@gmail.com Solution: Fix one element, and permute the remaining elements. Acknowledgement: CSDN blog: Output the Full Permutation of A List URL: https://blog.csdn.net/yezi1993/article/details/84143458&quot;&quot;&quot;################################# Generate the number list: 1--n################################def list_generator(n): num_list = [] num = int(n) for i in range(0,num): num_list.append(str(i + 1)) return num_list##################################################### Permutation# We use recursion to solve the problem:# For each trial, pick one element as the first one, # and permute the remaining elements####################################################def permutation(input_list): result_list = [] length = len(input_list) if length == 1: result_list.append(input_list) return result_list else: for i in range(0, length): # Fix element [i] temp_list = input_list[:i] + input_list[i+1:] c = input_list[i] per_list = permutation(temp_list) result_list += [[c] + j for j in per_list] return result_list################### Print the result##################def perm_print(result_list): for i in range(0, len(result_list)): output_str = &quot; &quot;.join(result_list[i]) print(output_str)if __name__ == &#39;__main__&#39;: input_n = input() original_list = list_generator(input_n) output_list = permutation(original_list) perm_print(output_list)If we sometimes see a function calling itself inside itself, that is recursion. My idea:Recursion is an important way of thinking.The main idea of recursion is to imitate. Because each time you call the function inside itself, it is solving the same problem, just with a lower dimension.Therefore, for this problem, we can assign one element as the first one, do the permutation to the remaining elements, put all the situations together and we will get a full permutation." }, { "title": "Bugs I Encountered (Week 3)", "url": "/posts/debug/", "categories": "TechNotes, Advanced Programming", "tags": "debug", "date": "2022-10-04 11:05:00 +0800", "snippet": "Problom 1 Wrong numberOriginal Problem:Give you a string, extract all the negative numbers from the string.e.g. (Source code: THU OJ)Input:This line contains 1 integer &quot;one&quot;.This line contains no integer.233, next line is empty.If you got -123.456, you should output 123 and 456.Any digit string are considered integers, like 0123456 and 007.You may also need to consider cases like a0a12a345a6789a.Output:1233123 456 123 4560123456 0070 12 345 6789Solution: The main idea of the source code: Find the first number of each string, then find the last number of the string, here we have a total number string. Decide whether it is the first string, if not so, output a SPACE. Bugs in the idea of the sorce code: (1) The source code didn’t initialize the bool-type variable.(2) The source code mistakes the ASCII code between character and number:&#39;0&#39;-&#39;9&#39; VS 0-9 My solution I chose to judge whether the number string is the last one (because I’m accustomed to output a space behind a string [Facepalm]) My source code:#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;cctype&amp;gt;using namespace std;int main() { for (string str; getline(cin, str); ) { bool if_final = true; size_t length = str.size(); /********************************************************************************************************************* * Judge whether the character is a number. * If so, find the last number following it. * Find out whether it is the last number string by judging whether there is still number behind this string * If so, it is not the last string, and you need to output a SPACE. *********************************************************************************************************************/ for(size_t i = 0; i &amp;lt; length; ++i){ if(str[i] &amp;gt;= &#39;0&#39; &amp;amp;&amp;amp; str[i] &amp;lt;= &#39;9&#39;){ size_t index = i; while(str[index] &amp;gt;= &#39;0&#39; &amp;amp;&amp;amp; str[index] &amp;lt;= &#39;9&#39;){ putchar(str[index]); ++index; } size_t inspect_back = index; while((str[inspect_back] &amp;lt; &#39;0&#39; || str[inspect_back] &amp;gt; &#39;9&#39;) &amp;amp;&amp;amp; inspect_back &amp;lt; length - 1){ ++inspect_back; if(str[inspect_back] &amp;gt;= &#39;0&#39; &amp;amp;&amp;amp; str[inspect_back] &amp;lt;= &#39;9&#39;) if_final = false; } if(!if_final) putchar(&#39; &#39;); i = index; if_final = true; } } printf(&quot;\\n&quot;); } return 0;}Problem 2 Wrong drinkOriginal problem:Give you several kinds of wine, the density is $d_i$, the price is $p_i$. Now input a series of densities, the program should output the lowest cost.(Source code: THU OJ)Solution: The idea of the source code is treating pairs ($d_i$, $p_i$) as a point of a 2-dimensional surface, find the convex hull, and pick two wines on the hull. Bugs in the idea: (1) The automatically called constructor and destructor: HERE WE HAVE AN EXAMPLE#include &amp;lt;iostream&amp;gt;class NewClass{public: NewClass(){std::cout &amp;lt;&amp;lt; &quot;Constructor !&quot; &amp;lt;&amp;lt; std::endl; } ~NewClass(){std::cout &amp;lt;&amp;lt; &quot;Destructor !&quot; &amp;lt;&amp;lt; std::endl; }};int main(){ printf(&quot;Object:\\n&quot;); NewClass cls; printf(&quot;\\n&quot;); printf(&quot;Pointer:\\n&quot;); NewClass* ptr1; printf(&quot;\\n&quot;); printf(&quot;New a pointer:\\n&quot;); NewClass* ptr2 = new NewClass(); printf(&quot;\\n&quot;); // delete ptr2; return 0;}Output:Object:Constructor !Pointer:New a pointer:Constructor !Destructor !Program ended with exit code: 0Here we can find that if we just declare a pointer, both the two functions won’t be called automatically.If you new a pointer, the constructor will be called automatically, while the destructor won’t.If you declare an object, both the two functions will be called automatically.Therefore we conclude that the automatically-called mechanism only works for objects. For pointer, sorry, you need to operate them manually.(2) Special situationsSometimes the new wine can’t be made: the minimum density is larger than the given density or the maximum density is smaller than given density. We need to deal with them seperately.My source code:#include &amp;lt;iostream&amp;gt;#include &amp;lt;iomanip&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;memory&amp;gt;using namespace std;// A bottle of winetypedef pair&amp;lt;int, int&amp;gt; dpair;// Node/*********************************************** * Initialized value = 0; * Counter = 0 &amp;lt;===&amp;gt; Nope or destroyed * Counter = 1 &amp;lt;===&amp;gt; Created************************************************/struct Wine { int d, p; Wine* last; static int counter; Wine() { ++counter; } ~Wine() { --counter; }};int Wine::counter = 0;/***************************************************************** * Memory inspector, NO MODIFYING !!!! * It will be destroyed when the programme ends, * If counter != 0, it means that the wine is not destructed *****************************************************************/struct Checker { int _; ~Checker() { if (Wine::counter != 0) cout &amp;lt;&amp;lt; &quot;你的对象没有正确释放!\\n&quot;; }} _c;int main() { ios::sync_with_stdio(0); int n, m; vector&amp;lt;dpair&amp;gt; wines; vector&amp;lt;int&amp;gt; qs; // Input n,m and the density &amp;amp; price of each bottle of wine // Create a wine shelf cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m; for (int i = 0; i &amp;lt; n; ++i) { int d, p; cin &amp;gt;&amp;gt; d &amp;gt;&amp;gt; p; wines.push_back(dpair(d, p)); } // Sort according to density sort(wines.begin(), wines.end()); // Create a new list Wine* phead = nullptr; Wine* temp = nullptr; for (int i = 0; i &amp;lt; n; ++i) { // Read in wine[i], you can say q = the corresponding struct node auto q = new Wine; q-&amp;gt;d = wines[i].first; q-&amp;gt;p = wines[i].second; // If two wines have the same value of d, discard the one whose q is bigger if ( phead &amp;amp;&amp;amp; phead-&amp;gt;d == q-&amp;gt;d) q-&amp;gt;~Wine(); // If phead and its tail aren&#39;t NULL while (phead != nullptr &amp;amp;&amp;amp; phead-&amp;gt;last != nullptr) { // Compare slope factor, delete the nodes away from the list // Convert the denominator to double type to avoid singular point if ((q-&amp;gt;p - phead-&amp;gt;p) / (double)(q-&amp;gt;d - phead-&amp;gt;d) &amp;lt;= (phead-&amp;gt;p - phead-&amp;gt;last-&amp;gt;p) /(double)(phead-&amp;gt;d - phead-&amp;gt;last-&amp;gt;d)){ temp = phead; phead = phead-&amp;gt;last; temp-&amp;gt;~Wine(); } else break; } // If phead isn&#39;t NULL or phead doesn&#39;t match q // The first loop go to here if (!phead || q-&amp;gt;d != phead-&amp;gt;d) { q-&amp;gt;last = phead; phead = q; } } // Use vector to search wines.clear(); for (auto i = phead; i; i = i-&amp;gt;last) { wines.push_back(dpair(i-&amp;gt;d, i-&amp;gt;p)); } // Delete the list for (auto i = phead; i; i = i-&amp;gt;last) { i-&amp;gt;~Wine(); } reverse(wines.begin(), wines.end()); cout.setf(ios::fixed); for (int i = 0; i &amp;lt; m; ++i) { int q; cin &amp;gt;&amp;gt; q; // Find the point which is the nearest to the the lowest hull // Here price is initialized to 0 if((wines[0].first &amp;gt; q) || (wines[wines.size() - 1].first &amp;lt; q)) cout &amp;lt;&amp;lt; -1 &amp;lt;&amp;lt; endl; else{ auto it = lower_bound(wines.begin(), wines.end(), dpair(q, 0)); auto ib = it - 1; double res = (it-&amp;gt;first - q) / (double)(it-&amp;gt;first - ib-&amp;gt;first) * ib-&amp;gt;second; res += (q - ib-&amp;gt;first) / (double)(it-&amp;gt;first - ib-&amp;gt;first) * it-&amp;gt;second; cout &amp;lt;&amp;lt; setprecision(2) &amp;lt;&amp;lt; res &amp;lt;&amp;lt; endl; } }}Acknowledgement:Thanks for Zhixiao Xiong(熊志潇，未央工-11)’s help, after several days’ debugging, we finally found the reason why the object couldn’t be released correctly." }, { "title": "Binary Search Tree (Python)", "url": "/posts/Binary-Search-Tree-Python/", "categories": "TechNotes, Advanced Python", "tags": "DSA", "date": "2022-09-14 18:52:30 +0800", "snippet": "Original ProblemGiven a number list, you can confirm a binary search tree. Now given two specified elements, you have to find the lowest common ancestor. My SolutionSource code is listed below:#!/usr/bin/env python3# Minimum common ancestors of binary seaarch tree# Special acknowledgement for Bingchuan Wei.# After discussed this practice with him, I learned basic binary search tree operation# by myself and succeeded to give an easier solution thanks to his help.# Nodes of a binary treeclass TreeNode: def __init__(self, val) -&amp;gt; None: self.val = val self.left = None self.right = None def insert(self, val): if val &amp;lt; self.val: if self.left is None: self.left = TreeNode(val) else: self.left.insert(val) elif val &amp;gt; self.val: if self.right is None: self.right = TreeNode(val) else: self.right.insert(val) else: self.right.insert(val)# A binary search treeclass BSTree: def __init__(self) -&amp;gt; None: self.root = None def construct(self, input_list): for node_val in input_list: if self.root is None: self.root = TreeNode(node_val) else: self.root.insert(node_val)# Solution partdef solution(root: &#39;TreeNode&#39;, treenode1: &#39;TreeNode&#39;, treenode2: &#39;TreeNode&#39;): while root: if treenode1.val &amp;lt; root.val and treenode2.val &amp;lt; root.val: root = root.left continue elif treenode1.val &amp;gt; root.val and treenode2.val &amp;gt; root.val: root = root.right else: return rootif __name__ == &#39;__main__&#39;: N, M = input().split() input_list = list(map(int, input().split())) tree = BSTree() tree.construct(input_list) output_list = [] for i in range(0, int(M)): val1, val2 = input().split() node1 = TreeNode(int(val1)) node2 = TreeNode(int(val2)) lowest_ance = solution(tree.root, node1, node2) output_list.append(lowest_ance.val) for result in output_list: print(result)From the source code, you can already infer that my solution is totally based on binary tree operations. My idea:To solve this problem, binary search tree situation is much easier, for in a binary search tree, it is required that left child node value be smaller than parent node while right child node be larger than parent node. Therefore, if a node is smaller than root node, it should be on the left branch, or else it should be on the right branch. In this problem I tried post-order traversal, which means visit sub-branches first. But this is a little bit tricky, if you try in this way, you will lose the advantage of binary search tree, because you need to use original binary tree traversal. Therefore here we use pre-order traversal, which means we visit root node first." }, { "title": "Bugs I Encountered (Week 1)", "url": "/posts/Bugs-I-Encountered-(Week-1)/", "categories": "TechNotes, Advanced Programming", "tags": "debug", "date": "2022-09-14 18:52:30 +0800", "snippet": " Four steps when you build and run your code: Pre-processing Compiling Assembling LinkingMostly bugs may happen in step 2 and 4. Why Mac treat warning as ERROR when compiling ?When I did Week 1 homework, there was a bug that only Mac users met.Source code:switch (type) { case kNoCompression: block_contents = raw; break; default: assert(false); break; }Normally, this code may cause a warning:warning: enumeration value &#39;kSnappyCompression&#39; not handled in switch [-Wswitch]However, when I tested on Mac, it caused an error:error: enumeration value &#39;kSnappyCompression&#39; not handled in switch [-Werror,-Wswitch]Everything went right when I tested on Ubuntu. Therefore, I went to look up [Werror], and found the bug in CMakeLists.txt:Original file:if(HAVE_CLANG_THREAD_SAFETY) target_compile_options(leveldb PUBLIC -Werror -Wthread-safety)endif(HAVE_CLANG_THREAD_SAFETY)Therefore the bug couldn’t be clearer any more: Mac uses clang to compile files, and here according to the CMakeLists, once you have clang to compile, the compiler will treat some warnings as ERROR !Once the bug was found, CMakeLists needed to be modified:if(HAVE_CLANG_THREAD_SAFETY) target_compile_options(leveldb PUBLIC -Wthread-safety)endif(HAVE_CLANG_THREAD_SAFETY)## Delete -Werror, which means closing WerrorWe could see that everything went right then. Mac has clang only, the so-called ’gcc’ or ’g++’ are actually a pointer to clang. When you install gcc through HomeBrew, you can use gcc command, which meets most programmers’ taste, but what is working is still clang!!!  That’s why every trial was a failure on Mac even though you’d installed gcc.$ gcc --versionApple clang version 13.1.6 (clang-1316.0.21.2.5)Target: arm64-apple-darwin21.5.0Thread model: posixInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin" }, { "title": "Cite your source", "url": "/posts/cite-your-source/", "categories": "TechNotes, Advanced Programming", "tags": "cite", "date": "2022-09-13 22:59:30 +0800", "snippet": " Whenever you copy code from others,  you have to cite the source !For details, please go to: MIT Code Writing Handbook.What should be provided URL Date of retrieval ( If you adapted the code ) Add “Adapted from..” or “Based on..” ( If you use open source software ) Copyright ( in your code ) + License ( in your workspace folder )Format of citing code sourcesExample 1——Qt comment format ( No copyright )/** * A utility class. * Adapted from [xxxx, source name] on [YYYYMMDD, date of retrieval] * Source: [URL] * [..., Other introduction] */class Util{ // Insert your code here...}Example 2 ( No copyright )// Adapted from [xxxx, source name]:// [URL, where you find it]// (Source: [URL, source code] retrieved in [YYYY MM DD]Example 3 ( Open source software )// Copyright (c) YYYY ........// ....// (You can just copy the copyright from git)" }, { "title": "Usage of Ubuntu on PC installed Windows Before", "url": "/posts/Ubuntu-Installation/", "categories": "TechNotes, Ubuntu", "tags": "Ubuntu", "date": "2022-09-11 14:43:30 +0800", "snippet": "Some bugs you are going to encounter(Thanks for Danny Wu&#39;s image on his blog:https://www.idannywu.com//1203.html?preview=true)Here we use DELL computer to install Ubuntu 20.04.For installation:Bug: Partition and mount pointMy computer is not completely compatible with all the softwares in Ubuntu, which caused a lot of problem. One of the most serious problems is that partition should be done manually. Here I will provide you a solution.Caution 1: Choose something else when the system remind you to choose installation type.There might be some errors because of your disk’s file system, and you didn’t set up the mount point when you try to install ubuntu. Something else allows you to set up new partition table and set your mount point manually.Like this:Then create a new partition table:This will generate freespace:Creating two partitions is enough. One is for efi, one is for root directory /.Then just install, and wait for completing.For usage:Bug 1: Bluetooth usageMost of the times, when you try to start your bluetooth through GUI operation, you may fail totally. Because there are some files missing on your computer or you need to generate by yourself manually.Step 1 Test your bluetooth status:$ hciconfighci0: Type: Primary Bus: USB BD Address: xx:xx:xx:xx:xx:xx ACL MTU: 1021:5 SCO MTU: 255:11 UP RUNNING PSCAN ISCAN RX bytes:5049586 acl:286 sco:0 events:717653 errors:0 TX bytes:441366701 acl:716716 sco:0 commands:562 errors:0Normally you should see this output. However, sometimes you may find your device is down.If so, try this:$ dmesg | grep -i &#39;bluetooth&#39;[ 1.637491] usb 3-8: Product: Bluetooth Radio[ 1.998444] Bluetooth: Core ver x.xx[ 1.998714] NET: Registered PF_BLUETOOTH protocol family[ 1.998716] Bluetooth: HCI device and connection manager initialized[ 1.998719] Bluetooth: HCI socket layer initialized[ 1.998741] Bluetooth: L2CAP socket layer initialized[ 1.998745] Bluetooth: SCO socket layer initialized[ 2.047006] Bluetooth: hci0: RTL: examining hci_ver=0a hci_rev=000b lmp_ver=0a lmp_subver=8761[ 2.047817] Bluetooth: hci0: RTL: rom_version status=0 version=1[ 2.047820] Bluetooth: hci0: RTL: loading rtl_bt/rtl8761bu_fw.bin[ 2.056603] Bluetooth: hci0: RTL: loading rtl_bt/rtl8761bu_config.bin[ 2.056623] bluetooth hci0: Direct firmware load for rtl_bt/rtl8761bu_config.bin failed with error -2[ 2.056632] Bluetooth: hci0: RTL: cfg_sz -2, total sz 21364[ 2.195857] Bluetooth: hci0: RTL: fw version 0x0d99646b[ 3.733812] Bluetooth: BNEP (Ethernet Emulation) ver 1.3[ 3.733815] Bluetooth: BNEP filters: protocol multicast[ 3.733819] Bluetooth: BNEP socket layer initialized[ 48.211273] Bluetooth: RFCOMM TTY layer initialized[ 48.211282] Bluetooth: RFCOMM socket layer initialized[ 48.211285] Bluetooth: RFCOMM ver x.xx[93405.468449] bluetoothd[567]: segfault at 18 ip xxxxxxxxxxxxxxx sp xxxxxxxxxxxxxxx error 4 in bluetoothd[5598d0f72000+9b000]This command helps you to display boot info and show all the files whose name contains “bluetooth”.If you find any files missing, recover it manually. Take this binary file as an example:$ sudo cp BCM43142A0-0a5c-21d7.hcd /lib/firmware/brcm/BCM43142A0-0a5c-21d7.hcd$ sudo modprobe -r btusb$ sudo modprobe btusbReboot your PC, and check whether it works." }, { "title": "Basic usage of ROS (3)", "url": "/posts/Basic-Usage-of-ROS-C/", "categories": "TechNotes, ROS", "tags": "ros", "date": "2022-09-05 14:34:30 +0800", "snippet": "How to Complete CMakeLists.txt and package.xmlIn ROS developing, CMakelists.txt and package.xml are two important files to build a package. Only the files under your package direcotry need to be modified. Since you are not sure what dependencies you are going to use at the beginning, therefore in real developing process the CMakeLists.txt and package.xml writing can’t be done completely by catkin_create_pkg.CMakeLists.txtHere are several basic commands: Function Command Usage Environment Configuration cmake_minimum_required(VERSION x.x.x) Set up the minimum version of CMake installed on your computer Environment Configuration project(xxx) Package name (automatiaclly generated by ROS) Find dependencies find_package(XX REQUIRED xxx) Normally catkin is necessary Add executable targets add_executable(EXEC FILES) EXEC-executable file name; FILES-all compilation units (.cpp) Add target library add_library(LIB FILES) LIB-library name; FILES-all compilation units (.cpp) Link libraries target_link_libraries(EXEC LIB) EXEC-executable file name;LIB-library name Include header files target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include) CMAKE_CURRENT_SOURCE_DIR=PACKAGE/src For complete tutorials, go to ROS wiki — CMakeLists.txt for further info. Here we find that somewhere has # commented, somewhere has ## commented, somewhere has no comment.This a small trick: No comment———This part is indispensible. You’d better not comment them or your project can’t be made. # commented——This part is optional, you can uncomment them when you need. ## commented—–This part is the real comment. Don’t uncomment them. Package.xml" }, { "title": "Basic usage of ROS (2)", "url": "/posts/Basic-Usage-of-ROS-B/", "categories": "TechNotes, ROS", "tags": "ros", "date": "2022-09-04 15:26:30 +0800", "snippet": "Basic Operations and Learning ResourcesPart 1 Learning Resources1. Official resourcesROS wikiROS answersROS wiki have the most comprehensive learning materials, including operations and package introduction.ROS answers is the official Q&amp;amp;A community. VPN is unnecessary here. However, a VPN can make your visit faster and smoother, so better get one.2. Other convenient resourcesThe best solution when you can’t find answer on ROS wiki is GOOGLINGWhen you google, you may find many useful websites and blogs written by fully experienced developers, such as CSDN, Stackoverflow and so on. VPN is required when googling.With those resources, your learning process may become easier.Part 2 Basic Operations1. Configure your environmentTo start ROS automatically whenever you open a new terminal, run:echo &quot;source /opt/ros/noetic/setup.bash&quot; &amp;gt;&amp;gt; ~/.bashrc # Write &quot;source&quot; into bash configsource ~/.bashrc # Activate new bash configNow ROS environment can be acitivated once you open a new terminal.2. Manage ROS filesystemHere are some useful commands to navigate ROS filesystem:roscd [package][/subdir] # Automatically go to /opt/ros/noeticrospack find [package] # Show the path of certain packagerosls [package]These commands will save you a lot of time of inputting a long file path.3. Start your workStep 1: Create a new workspaceEach time you start your work, you need a workspace to use catkin tools.mkdir -p WORKSPACE_NAME/src # Replace WORKSPACE_NAME with custom name of your new workspacecd WORKSPACE_NAME/src # Go to /src in your workspaceStep 2 Create a packageROS use packages to accomplish all the functions. To create your own ROS package, run:catkin_create_pkg PKG_NAME [dependency 1][dependency 2]...# Replace PKG_NAME with custom package name# If you develop ROS project with Cpp, dependency &#39;roscpp&#39; is required at least# Else if you develop with Python, dependency &#39;rospy&#39; is required at least# You can also add other dependencies, it depends on which packages you need to include Actually, this command mainly helps you to generate the files entailed to build your project. Therefore, if you are not sure what dependency you may need in your work, you can addroscpp/ rospy only, and add the other dependencies in CMakeLists.txt  and  package.xml later.Step 3 Build your packageGo to your package directory:cd PKG_NAMEIf you run ls , you will see:CMakeLists.txt package.xml src includeNow you can start your work like a normal Cpp or Python project. Take Cpp as example, put header files in /include, and put source files in /src,. Remember to modify CMakeLists.txt and package.xml, how to do this will be posted in Basic Usage of ROS (3)After you finish your work, build the package:cd $PATH_OF_WORKSPACEcatkin_makecd srcIf you run ls , you will see the following:PKG_NAME CMakeLists.txtThis means building and compilation are all successful.Step 4 Test your packageUse rosrun to run your project:rosrun [package] [exec file] There is something different from ROS 2. In ROS 1, what we need to run is executable file, instead of .cpp or .py file !HOORAY !!!!!!!! Now you can create your own work now !" }, { "title": "Basic usage of ROS (1)", "url": "/posts/Basic-Usage-of-ROS-A/", "categories": "TechNotes, ROS", "tags": "ros", "date": "2022-09-03 09:07:30 +0800", "snippet": "Introduction and Installation of ROSPart 1 What is ROS?ROS (Robot Operating System) is a kind of software characteristic of operating system. Currently most developers use Ubuntu to run ROS. Actually it can be used to build a real robot, not only simulations.If you want to learn ROS by yourself, you can go to ROS wiki for details.Part 2 Installation In this essay, we recommend Ubuntu 20.04, because this is the latest version compatible with both ROS 1 and 2. Even though we do not use ROS 2 here,  since ROS 1 has already stopped updating, we are almost sure that ROS 2 might replace ROS 1 in the future.Step 1: Choose your ROS versionYou may look up the correspondence between ROS and Ubuntu versions in ROS wiki. For Ubuntu 20.04 we choose Noetic.Step 2: Setup your source.listAdd packages.ros.org to your ubuntu source list:sudo sh -c &#39;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &amp;gt; /etc/apt/sources.list.d/ros-latest.list&#39;Step 3: Setup your keys and check your sourceMake sure that you’ve installed curl first. No matter whether you are sure or not, just run the following command:sudo apt install curlDo not worry that you may get two curls in your Ubuntu. If you’ve installed curl before, this command will do the update check only.Then add keys:curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc # Use curl to download ros.ascsudo apt-key adv --keyserver &#39;hkp://keyserver.ubuntu.com:80&#39; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 Don’t just copy the command from ros wiki, because the command provided didn’t provide the  pubkey, if you cmd c+v unquestioningly, you may see an error report like this when you try the next step:Now you can check your sources:sudo apt updateStep 4 Install ROSHere we recommend Desktop-full Install, because the features in this version are the most complete, and it also contains tutorial projects.sudo apt install ros-noetic-desktop-full If you want to install more other packages ROS doesn’t have, use the following command:sudo apt install ros-noetic-PACKAGE # Replace PACKAGE with target package nameStep 5 Setup the environmentROS environment is quite like bash, use the following command to source ros-bash:source /opt/ros/noetic/setup.bashecho &quot;source /opt/ros/noetic/setup.bash&quot; &amp;gt;&amp;gt; ~/.bashrc source ~/.bashrc # Whenever you open your local bash, &#39;setup.bash&#39; will be sourced automatically# If you use zsh, replace &#39;bashrc&#39; with &#39;zshrc&#39;Step 6 Install dependenciesThe work we’ve already done before allows us to run ros core packages. To make more convenience for your work, here some useful tools that are necessary. To install them, run the following command:sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential# rosdep, rosinstall, wstool, etc.Before you use the tools, you need to initialize rosdep:sudo rosdep initrosdep update Some times you may get an error report like this:If you encounter this problem, follow the following steps: Ping the domain:ping raw.githubusercontent.com# &#39;raw.githubusercontent.com&#39; is mainly used to store files (except source code), we download non-code files from here.If it can’t work, please check your network status. If it works,  go to the next step. Find ip address of the domain: Here we recommend ipaddress.com, which is useful when looking up the ip address of one URL.As for raw.githubusercontent.com, here are several common ip addresses: 185.199.108.133 185.199.109.133 185.199.110.133 185.199.111.133The tip is just my experience, the ip may change sometimes, anyway, the core task is to find out the IP address.Add the IP address to ~/etc/hosts, save and close the file. Retry step 1. If it doesn’t work, you may need to complete the process of ‘rosdep init’ command manually. In linux, everything is file. If a command cannot work, the most possible reason is file loss. Therefore, if we can recover the missing files, most of the problems can be solved.Just find another computer with ros,  compare the files and directories in /ros of the two computers, and add the file by yourself. This is extremely unrecommended ! Because you are not sure whether other tools have the same problem. Also, keeping your network active is necessary for all work, so trying step 1 and step 2 is enough, if it can’t work, I highly suggest you to change a computer…HOORAY !!!!!!!! You&#39;ve already finished all the steps, and now you can explore ROS as you wish !" } ]
